name: Run Python Script
run-name: DB Snapshot (${{ inputs.environment }})

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: choice
        default: 'dev'
        required: true
        options:
          - 'dev'
          - 'stg'
          - 'uat'
          - 'prd'      

jobs:
  validate-access:
    runs-on: ubuntu-latest
    outputs:
      is_member: ${{ steps.check-team.outputs.is_member }}
    steps:
      - name: Check if User is in dev1 Team
        id: check-team
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Using Classic PAT with read:org
          ORG_NAME: "har-kri"  # Replace with your GitHub Organization name
          TEAM_SLUG: "dev1"  # Replace with your Team slug
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/orgs/$ORG_NAME/teams/$TEAM_SLUG/memberships/${{ github.actor }})

          if [[ "$RESPONSE" == "200" ]]; then
            echo "User is in the dev1 team ✅"
            echo "is_member=true" >> $GITHUB_ENV
            echo "is_member=true" >> $GITHUB_OUTPUT
          else
            echo "❌ User $GITHUB_ACTOR is NOT in dev1 team!"
            echo "is_member=false" >> $GITHUB_ENV
            echo "is_member=false" >> $GITHUB_OUTPUT
            exit 1  # ❗ Fails the job if the user is not in dev1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: validate-access
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Selected Environment
        run: echo "🚀 Deploying to ${{ inputs.environment }}"

      - name: Run Python script
        run: python script2.py
